{"version":3,"sources":["logo.png","Helpers.js","App.js","reportWebVitals.js","index.js"],"names":["empty","require","basename","axios","default","Item","props","data","this","Row","className","Col","Card","Header","filename","Body","Helpers","provider","Text","ready","downloads","Object","keys","forEach","key2","download","status","done","push","xs","path","ProgressBar","variant","now","percent","label","sizeText","speedText","timeText","React","Component","List","_this","state","get","then","response","setState","catch","error","console","loadList","setInterval","html","key","App","magnet","handleMagnetChange","bind","event","target","value","addMagnet","log","post","alert","Container","fluid","Navbar","collapseOnSelect","expand","bg","Brand","href","src","logo","alt","Toggle","Collapse","id","Nav","Link","Form","Group","controlId","Control","type","onChange","placeholder","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.743e0aae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0de7024e.png\";","// ##########################################\r\n// Global Requires\r\n// ##########################################\r\n\r\n// lodash\r\nexport var _ = require('lodash');\r\n\r\n// TODO: Replace Locutus stuff with lodash most of it should work out nicely and if not i need to write a wrapper.\r\n// var\r\nexport var empty = require('locutus/php/var/empty');\r\nexport var isset = require('locutus/php/var/isset');\r\n\r\n// url\r\nexport var base64_decode = require('locutus/php/url/base64_decode');\r\nexport var base64_encode = require('locutus/php/url/base64_encode');\r\nexport var urlencode = require('locutus/php/url/urlencode');\r\n\r\n// array\r\nexport var in_array = require('locutus/php/array/in_array');\r\nexport var array_slice = require('locutus/php/array/array_slice');\r\nexport var array_search = require('locutus/php/array/array_search');\r\nexport var count = require('locutus/php/array/count');\r\nexport var array_filter = require('locutus/php/array/array_filter');\r\n\r\n// strings\r\nexport var explode = require('locutus/php/strings/explode');\r\nexport var str_replace = require('locutus/php/strings/str_replace');\r\nexport var strtolower = require('locutus/php/strings/strtolower');\r\nexport var strtoupper = require('locutus/php/strings/strtoupper');\r\nexport var trim = require('locutus/php/strings/trim');\r\nexport var nl2br = require('locutus/php/strings/nl2br');\r\n\r\n// math\r\nexport var round = require('locutus/php/math/round');\r\nexport var abs = require('locutus/php/math/abs');\r\n\r\n// time\r\nexport var time = require('locutus/php/datetime/time');\r\nexport var date = require('locutus/php/datetime/date');\r\nexport var strtotime = require('locutus/php/datetime/strtotime');\r\n\r\n// filesystem\r\nexport var basename = require('locutus/php/filesystem/basename');\r\nexport var pathinfo = require('locutus/php/filesystem/pathinfo');\r\n\r\n// misc\r\nexport var uniqid = require('locutus/php/misc/uniqid');","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport logo from './logo.png';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport * as Helpers from './Helpers';\n\nimport { Container, Row, Col, Nav, Navbar, NavDropdown, Card, Button, ProgressBar, Form, Alert } from 'react-bootstrap';\n\nimport { FaExclamationTriangle, FaCloudDownloadAlt, FaDownload, FaClock, FaPauseCircle, FaTachometerAlt, FaDatabase, FaCheckCircle } from 'react-icons/fa';\n\nconst axios = require('axios').default;\n\n\n\n\n\n\nclass Item extends React.Component {\n  constructor(props) {\n      super(props);\n  }\n\n  render() {\n\n    let data = this.props.data;\n    return (\n        <Row className=\"pt-3\" key={\"item\"+data.filename}>\n          <Col>\n            <Card className=\"text bg-warning\">\n              <Card.Header>{data.filename}</Card.Header>\n              <Card.Body>\n\n                {(() => {\n\n                  if(Helpers.empty(data.provider)) {\n\n                    return (\n                      <Card.Text>\n                        <FaExclamationTriangle /> Waiting for transfer to Provider.\n                      </Card.Text>\n                    );\n\n                  } else {\n\n                    if(!Helpers.empty(data.provider) && !data.provider.ready) {\n\n                      return (\n                        <div>\n                          <Card.Text>\n                            <FaCloudDownloadAlt /> Waiting for Provider Download to finish.\n                          </Card.Text>\n                        </div>\n                      );\n\n                    } else if(!Helpers.empty(data.provider) && data.provider.ready) {\n\n                        if(Helpers.empty(data.downloads)) {\n\n                          return (\n                            <div>\n                              <Card.Text>\n                                <FaPauseCircle /> Waiting for Downloader to download.\n                              </Card.Text>\n                            </div>\n                          );\n\n                        } else if(!Helpers.empty(data.downloads)) {\n\n                          let downloads = [];\n   \n                          Object.keys(data.downloads).forEach(function(key2) {\n\n                            let download = data.downloads[key2];\n\n                            let status = <FaDownload />;\n\n                            if(download.done) {\n                              status = <FaCheckCircle />;\n                            }\n\n                            if(download) {\n                              downloads.push(\n                                <Row>\n                                  <Col xs=\"6\">{status} {Helpers.basename(download.path)}</Col>\n                                  <Col xs=\"6\">\n                                    <Row>\n                                      <Col xs=\"3\" className=\"pt-2\"><ProgressBar className=\"bg-dark\" variant=\"danger\" now={download.percent} label={`${download.percent}%`} /></Col>\n                                      <Col xs=\"3\"><FaDatabase /> {download.sizeText}</Col>\n                                      <Col xs=\"3\"><FaTachometerAlt /> {download.speedText}</Col>\n                                      <Col xs=\"3\"><FaClock /> {download.timeText}</Col>\n                                    </Row>\n                                  </Col>\n                                </Row>\n\n                              );\n                            } else {\n                              downloads.push(\n                                <Row>\n                                  <Col><FaPauseCircle /> Waiting for Download Slot.</Col>\n                                </Row>\n                              );\n                            }\n\n                          });\n                    \n                          return downloads;\n\n                        } else {\n                          return null;\n                        }\n\n\n                    }\n\n\n\n                  }\n\n                  return null;\n\n                })(this)}\n\n\n\n\n\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      );\n\n  }\n}\n\n\n\n\nclass List extends React.Component {\n  constructor(props) {\n      super(props);\n  }\n\n  loadList() {\n\n    let _this = this;\n    var stateData = this.state;\n\n    axios.get(\"http://127.0.0.1:1337/status\").then(function (response) {\n        let data = response.data;\n        _this.setState({data: data});\n    })\n    .catch(function (error) {\n        console.error( error );\n        _this.setState({error: error});\n    });\n  }\n\n\n  componentDidMount() {\n    let _this = this;\n    this.loadList();\n\n    setInterval(function(){ \n      _this.loadList(); \n    }, 1000);\n  }\n\n  render() {\n\n      if(!Helpers.empty(this.state)) {\n\n          return(\n            <div>\n\n              {(() => {\n\n                let _this = this;\n                let html = [];\n\n                if(!Helpers.empty(this.state.data)) {\n                    Object.keys(this.state.data).forEach(function(key) {\n                      html.push(\n                          <Item key={\"data\"+key} data={_this.state.data[key]} />\n                      );\n                    });\n                } else {\n                    html.push(\n                      <Card className=\"text bg-warning\">\n                        <Card.Header>Waiting for Blackhole....</Card.Header>\n                      </Card>\n                    );\n                }\n\n                return html;\n\n              })(this)}\n\n            </div>\n          );\n\n      } else {\n          return null;\n      }\n\n  }\n}\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {magnet: '', data: ''};\n      this.handleMagnetChange = this.handleMagnetChange.bind(this);\n  }\n\n  \n  handleMagnetChange(event) {\n    this.setState({magnet: event.target.value});\n    this.addMagnet(event.target.value);\n  }\n\n  addMagnet(value) {\n    console.log(value);\n\n    axios.post(\"http://127.0.0.1:1337/add/magnet\", {magnet: value}).then(function (response) {\n        let data = response.data;\n        console.log( data );\n        alert(\"Magnet added!\");\n    })\n    .catch(function (error) {\n        console.error( error );\n    });\n\n\n    this.setState({magnet: \"\"});\n  }\n\n  addTorrent() {\n\n  }\n\n  render() {\n\n    return (\n      <Container fluid>\n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"warning\" variant=\"light\">\n          <Container>\n          <Navbar.Brand href=\"#home\"><img src={logo} className=\"img-responsive logo\" alt=\"logo\" /></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n\n            </Nav>\n            <Nav>\n              <Nav.Link href=\"#settings\">Settings</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        <Container className=\"main-content\">\n\n          <Row className=\"pb-3\">\n            <Col>\n              <Card className=\"text bg-warning\">\n                <Card.Header>Add Magnet</Card.Header>\n                <Card.Body className=\"pb-0\">\n                  <Form>\n                    <Form.Group className=\"\" controlId=\"formMagnet\">\n                      <Form.Control type=\"magnet\" value={this.state.magnet} onChange={this.handleMagnetChange} placeholder=\"magnet:xt=urn:btih:xxx\" />\n                    </Form.Group>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card className=\"text bg-warning\">\n                  <Card.Header>Add Torrent</Card.Header>\n                  <Card.Body className=\"pb-0\">\n                    <Form>\n                      <Form.Group controlId=\"formTorrent\">\n                        <Button variant=\"danger\" className=\"btn-block\">Enter Torrent</Button>\n                      </Form.Group>\n                    </Form>\n                  </Card.Body>\n                </Card>\n            </Col>\n          </Row>\n\n          <List />\n\n        </Container>\n\n\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}